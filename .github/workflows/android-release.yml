name: Flutter CI

on: push

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev' # 'beta', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter
      # Get flutter dependencies.
      - run: flutter pub get
      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .
      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .
      # Run widget tests for our flutter project.
#       - run: flutter test
      # Build apk.
      - run: flutter build apk
      - run: 'echo build/app/outputs/apk/release/app-release.apk > app-release.apk'
      - uses: MeilCli/slack-upload-file@v1
        with:
          slack_token: ${{ secrets.SLACK_READ_WRITE_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNEL_DEPLOY }}
          file_path: 'build/app/outputs/apk/release/app-release.apk'
          file_name: 'app-release.apk'
          file_type: 'apk'
          initial_comment: '${{ github.ref }} | ${{ github.sha }}'
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      # Upload generated apk to the artifacts.
#      - uses: actions/upload-artifact@v1
#        with:
#          name: release-apk
#          path: build/app/outputs/apk/release/app-release.apk
